from pathlib import Path

from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, InlineKeyboardButton, CallbackQuery, FSInputFile
from aiogram.utils.keyboard import InlineKeyboardBuilder

from sqlalchemy.ext.asyncio import AsyncSession

from bot.db.users.requests import UsersDAO
from bot.fsm.fsm import MiniDialogSG
from bot.handlers.user_handlers.helpers import is_user_in_payment

router = Router(name="startup_router")


@router.message(CommandStart())
async def start_first_time_handler(message: Message, session: AsyncSession, state: FSMContext):
    if await is_user_in_payment(state):
        pass
    else:
        user_telegram_id = message.from_user.id
        user = await UsersDAO.get_user(session=session, telegram_id=user_telegram_id)
        builder = InlineKeyboardBuilder()

        if not user:
            builder.row(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ‚ú®", callback_data="greeting_btn"))

            await message.answer(
                text="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é  –í–∞—Å, –º–æ–π –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥!\n\n"
                     "–Ø –ø—Ä–∏–≥–ª–∞—à–∞—é –í–∞—Å –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ.\n" 
                     "–¢–∞–∫ –¥–æ–ª–≥–æ —è –¥—É–º–∞–ª–∞ –Ω–∞–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º —ç—Ç–æ–≥–æ —Å–≤–µ—Ç–ª–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.\n\n"
                     "–û–¥–Ω–∞–∂–¥—ã, —Å–æ–∑–¥–∞–≤ –∫–æ–ª–æ–¥—É –ö—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –ö—Ä–∞–π–æ–Ω–∞, —è –ø–æ–Ω—è–ª–∞, —á—Ç–æ –±—ã–≤–∞—é—Ç —Å–ª—É—á–∞–∏, "
                     "–∫–æ–≥–¥–∞ –º–Ω–µ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –ö—Ä–∏—Å—Ç–∞–ª–ª–æ–≤, –Ω–æ —É –º–µ–Ω—è  –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –ø–æ–¥ —Ä—É–∫–æ–π –∫–∞—Ä—Ç.\n\n"
                     "–ò —Ç–æ–≥–¥–∞ —è —Ä–µ—à–∏–ª–∞—Å—å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —ç—Ç–æ–≥–æ —Å–≤–µ—Ç–ª–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.\n"
                     "–Ø –Ω–∞–ø–æ–ª–Ω–∏–ª–∞ –µ–≥–æ —Å–≤–µ—Ç–æ–º –ª—é–±–≤–∏ –∏ —Å —Ç—Ä–µ–ø–µ—Ç–æ–º –æ—Ç–Ω–æ—à—É—Å—å –∫ –∫–∞–∂–¥–æ–º—É, –∫—Ç–æ —Å—é–¥–∞ –∑–∞—à—ë–ª.",
                reply_markup=builder.as_markup(),
            )
            await UsersDAO.add_user(session=session, telegram_id=user_telegram_id, username=message.from_user.username)
            await state.set_state(MiniDialogSG.greeting)
        else:
            builder.row(InlineKeyboardButton(text="–ß—Ç–æ —Ç–∞–∫–æ–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã? üíé", callback_data="what_is_crystal_btn_startup"))
            builder.row(InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°", callback_data="go_to_menu"))
            builder.row(InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ù§Ô∏è", callback_data="help_btn"))

            if not user.username:
                text = '–ü—Ä–∏–≤–µ—Ç!'
            else:
                text = f'–ü—Ä–∏–≤–µ—Ç, <a href="{message.from_user.url}">{user.username}</a>!'

            await message.answer(
                text=text,
                reply_markup=builder.as_markup(),
            )


@router.callback_query(F.data == "go_back_to_start_cmd")
async def go_back_to_start_cmd_handler(callback: CallbackQuery, session: AsyncSession):
    await callback.answer()
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–ß—Ç–æ —Ç–∞–∫–æ–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã? üíé", callback_data="what_is_crystal_btn_startup"))
    builder.row(InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°", callback_data="go_back_to_menu"))
    builder.row(InlineKeyboardButton(text="–ü–æ–º–æ—â—å ‚ù§Ô∏è", callback_data="help_btn"))

    user_telegram_id = callback.message.chat.id
    user = await UsersDAO.get_user(session=session, telegram_id=user_telegram_id)

    if not user.username:
        text = '–ü—Ä–∏–≤–µ—Ç!'
    else:
        text = f'–ü—Ä–∏–≤–µ—Ç, <b>{user.username}</b>!'

    await callback.message.answer(
        text=text,
        reply_markup=builder.as_markup(),
    )


@router.callback_query(F.data == "what_is_crystal_btn_startup")
async def what_is_crystal_btn_startup_handler(callback: CallbackQuery):
    await callback.answer()
    await callback.message.delete_reply_markup()

    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–î–∞–ª—å—à–µ ‚û°Ô∏è", callback_data="go_to_second_history_msg"))

    await callback.message.answer_video(
        video=FSInputFile(path=Path("bot/videos/history_video.MP4")),
        caption="–ò—Å—Ç–æ—Ä–∏—è –ö—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –Ω–∞—á–∞–ª–∞—Å—å –µ—â–µ –≤–æ –≤—Ä–µ–º–µ–Ω–∞ –≤–µ–ª–∏–∫–∏—Ö –ê—Ç–ª–∞–Ω—Ç–æ–≤ –≤ –ê—Ç–ª–∞–Ω—Ç–∏–¥–µ.\n\n"
                "–û–Ω–∏ —è–≤–ª—è—é—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è–º–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –æ–±–ª–∞–¥–∞—é—Ç –≤–µ–ª–∏–∫–æ–π —Å–∏–ª–æ–π, "
                "–Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π –∏ –¥–∞–∂–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å—é –∫ –∏–∑–ª–µ—á–∏–≤–∞–Ω–∏—é. "
                "–ë–ª–∞–≥–æ–¥–∞—Ä—è —Ç–æ–º—É, —á—Ç–æ –ö—Ä–∏—Å—Ç–∞–ª–ª—ã —Å–æ–∑–¥–∞–Ω—ã –∏–∑ –≤—ã—Å–æ—á–∞–π—à–µ–≥–æ —á–∏—Å—Ç–æ–≥–æ —Å–≤–µ—Ç–∞, "
                "–æ–Ω–∏ —è–≤–ª—è—é—Ç—Å—è –æ—Ç–ª–∏—á–Ω—ã–º–∏ –∏ –æ–¥–Ω–∏–º–∏ –∏–∑ —Å–∞–º—ã—Ö –¥–µ–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤ "
                "–∫–∞—Ä–º–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–∞ —É—Ä–æ–≤–Ω–µ —Ä–æ–¥–æ–≤–æ–π —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏.\n\n"
                "–ö–∞–∂–¥—ã–π –ö—Ä–∏—Å—Ç–∞–ª–ª –ø–æ–¥—á–∏–Ω—è–µ—Ç—Å—è –±–æ–∂–µ—Å—Ç–≤–∞–º, –∏–º–µ–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è "
                "–∏ –¥–∞–∂–µ –æ–±–ª–∞–¥–∞–µ—Ç —Å–≤–æ–∏–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ–º. "
                "–ù–∞ –¥–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –ö—Ä–∏—Å—Ç–∞–ª–ª—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –æ–¥–Ω–æ–º –∏–∑ –ø–æ–º–µ—â–µ–Ω–∏–π "
                "–ø–∏—Ä–∞–º–∏–¥—ã –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ì–∏–∑–∞, –∫–æ—Ç–æ—Ä–æ–µ –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ.\n\n",
        reply_markup=builder.as_markup(),
    )


@router.callback_query(F.data == "go_to_second_history_msg")
async def go_to_second_history_msg_handler(callback: CallbackQuery):
    await callback.answer()
    await callback.message.delete_reply_markup()

    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="go_back_to_start_cmd"))

    await callback.message.edit_caption(
        caption="–ö—Ä–∏—Å—Ç–∞–ª–ª—ã - —ç—Ç–æ –º–∞—Ç—Ä–∏—Ü—ã –í—Å–µ–ª–µ–Ω–Ω–æ–π, —Ö—Ä–∞–Ω—è—â–∏–µ –≤—ã—Å–æ–∫–∏–µ –≤–∏–±—Ä–∞—Ü–∏–∏. "  
                "–í—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ –¥–ª—è —Å–µ–±—è –Ω–µ–æ–±—ã—á–Ω—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É –Ω–æ–≤—ã—Ö –∑–Ω–∞–Ω–∏–π. –ö—Ä–∏—Å—Ç–∞–ª–ª—ã –≤–∞–º –ø–æ–∫–∞–∂—É—Ç –∏—Å—Ç–æ—Ä–∏—é " 
                "–≤ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö, –∏ –¥–∞–¥—É—Ç —Ç–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é –í—ã –Ω–∏–≥–¥–µ –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ. –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ " 
                "–ö—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —è–∑—ã–∫–æ–º –°–≤–µ—Ç–∞, –ø–∞–∫–µ—Ç–∞–º–∏ —Å–≤–µ—Ç–æ–≤—ã—Ö –∏–º–ø—É–ª—å—Å–æ–≤. "
                "–ö—Ä–∏—Å—Ç–∞–ª–ª—ã –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç —É—Å–∏–ª–∏—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –°–≤–µ—Ç–∞, –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –º–µ–Ω—è—é—Ç –∂–∏–∑–Ω—å " 
                "—á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ –º—ã—Å–ª–∏ –∏ —ç–º–æ—Ü–∏–∏. –ü—Ä–∏ "
                "—Å–æ–ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏–∏ —Å —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø–æ–ª—è–º–∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—Ç —Å–∫–æ—Ä–µ–π—à–µ–π –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏–∏ " 
                "–≤–∞—à–∏—Ö –Ω–∞–º–µ—Ä–µ–Ω–∏–π –∏ –º—ã—Å–ª–µ—Ñ–æ—Ä–º.",
        reply_markup=builder.as_markup(),
    )


@router.callback_query(F.data == "help_btn")
async def help_btn_handler(callback: CallbackQuery):
    await callback.answer()
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="go_back_to_start_cmd"))

    await callback.message.edit_text(
        text="–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, "
             "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –∏ –º—ã —Ä–µ—à–∏–º –∏—Ö –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏.\n\n"
             "–ë–ª–∞–≥–æ–¥–∞—Ä—é ‚ù§Ô∏è\n\n"
             "<b><em>–¢–µ–ª–µ–≥—Ä–∞–º</em></b>üîó: @Butakova_T",
        reply_markup=builder.as_markup(),
    )
